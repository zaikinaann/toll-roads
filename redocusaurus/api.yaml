openapi: 3.0.2
info:
  title: Toll Roads OpenAPI
  description: Позволяет то то то
  version: '1.0'
security:
  - BearerAuth: []
servers:
  - url: https://api.server.test/v1
  - url: https://api.routing.yandex.net/v2
tags:
  - name: Roads
    description: Трассы
  - name: Result
    description: Расчет стоимости
  - name: Map
    description: Отрисовка карты
  - name: Random Section
    description: Произвольный участок трассы
paths:
  /roads:
    get:
      tags:
        - Roads
      summary: Получение списка трасс
      responses:
        '200':
          description: Успешное получение списка трасс
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRoads'
        '404':
          description: Ресурс не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStructure'
        '500':
          description: Внутренняя ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStructure'
  /roads/{roadId}:
    get:
      tags:
        - Roads
      summary: Получение остальных данных автодороги (все промежуточные пункты)
      parameters:
        - name: roadId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/roadId'
      responses:
        '200':
          description: Успешное получение данных автодороги
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entrancesAndExits'
        '404':
          description: Ресурс не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStructure'
        '500':
          description: Внутренняя ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStructure'
  /result:
    post:
      tags:
        - Result
      summary: Расчет стоимости
      requestBody:
        description: Содержит поля для расчета стоимости
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/calcData'
      responses:
        '200':
          description: Успешный расчет стоимости
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: number
        '404':
          description: Ресурс не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStructure'
        '500':
          description: Внутренняя ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStructure'
  /maps/{roadId}:
    get:
      tags:
        - Map
      summary: Отрисовка карты
      parameters:
        - name: roadId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/roadId'
        - name: startLocation
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/locationId'
        - name: endLocation
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/locationId'
      responses:
        '200':
          description: Успешное получение изображения карты
          content:
            image/png:
              schema:
                type: string
                format: binary
        '404':
          description: Ресурс не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStructure'
        '500':
          description: Внутренняя ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStructure'
  /randomSection:
    get:
      tags:
        - Random Section
      summary: Получение всех точек въезда/выезда с платных трасс
      responses:
        '200':
          description: Успешное получение всех точек
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/location'
                  - $ref: '#/components/schemas/road'
  /route:
    get:
      summary: Получения деталей маршрута между точками от API Яндекса
      parameters:
        - name: apikey
          in: query
          required: true
          description: Ключ, полученный в Кабинете Разработчика
          schema:
            type: string
            example: my_hacked_access_key
        - name: waypoints
          description: Точки маршрутов, указанные в десятичных градусах (стандарт WGS84)
          in: query
          required: true
          schema:
            type: string
            example: >-
              25.234369457896325,55.280222457968712|25.234369457896325,55.401544758961258
        - name: mode
          in: query
          required: false
          description: Режим маршрута
          schema:
            type: string
            enum:
              - driving
              - truck
        - name: departure_time
          in: query
          required: false
          description: Время отправления в формате Unix
          schema:
            type: integer
        - name: avoid_tolls
          in: query
          required: false
          description: Избегать платных дорог (по умолчанию false)
          schema:
            type: boolean
        - name: avoid_zones
          in: query
          required: false
          description: Избегать зоны в формате lat,lon
          schema:
            type: array
            items:
              type: string
            example:
              - lat1,lon1
              - lat2,lon2
        - name: traffic
          in: query
          required: false
          description: Учет трафика
          schema:
            type: string
            example: disabled
        - name: weight
          in: query
          required: false
          description: Масса ТС в тоннах
          schema:
            type: number
            format: float
            example: 1500
        - name: axle_weight
          in: query
          required: false
          description: Фактическая нагрузка на ось ТС в тоннах
          schema:
            type: number
            format: float
            example: 500
        - name: max_weight
          in: query
          required: false
          description: Разрешенная максимальная масса ТС в тоннах
          schema:
            type: number
            format: float
            example: 3000
        - name: height
          in: query
          required: false
          description: Высота ТС в метрах
          schema:
            type: number
            format: float
            example: 4
        - name: width
          in: query
          required: false
          description: Ширина ТС в метрах
          schema:
            type: number
            format: float
            example: 2
        - name: length
          in: query
          required: false
          description: Длина ТС в метрах
          schema:
            type: number
            format: float
            example: 8
        - name: payload
          in: query
          required: false
          description: Максимальная грузоподъёмность ТС в тоннах
          schema:
            type: number
            format: float
            example: 1000
        - name: eco_class
          in: query
          required: false
          description: Экологический класс ТС
          schema:
            type: integer
            example: 3
        - name: has_trailer
          in: query
          required: false
          description: Наличие прицепа
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Успешный ответ с маршрутом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/routeResponce'
components:
  schemas:
    listRoads:
      description: Список трасс с их характеристиками
      type: array
      items:
        $ref: '#/components/schemas/road'
      example:
        - roadId: 4
          roadname: М-4 "Дон"
          startLocation:
            - locationId: 35
              locationName: МКАД (21 км, начало трассы)
              city:
                - cityId: 245
                  cityName: Москва
              coordinates: 134.854412 -25.828084
              km: 21
              openPVP: false
          endLocation:
            - locationId: 35
              locationName: г. Краснодар (1319 км)
              city:
                - cityId: 652
                  cityName: Краснодар
              coordinates: 134.854412 -25.828084
              km: 1319
              openPVP: false
        - roadId: 15
          roadname: ЗСД
          startLocation:
            - locationId: 154
              locationName: КАД (ЮГ)
              city:
                - cityId: 2
                  cityName: Санкт-Петербург
              coordinates: 134.854412 -25.828084
              km: 1
              openPVP: true
          endLocation:
            - locationId: 203
              locationName: У-18 "Скандинавия"
              city:
                - cityId: 2
                  cityName: Санкт-Петербург
              coordinates: 134.854412 -25.828084
              km: 78
              openPVP: false
    road:
      description: Трасса с характеристиками
      type: object
      required:
        - roadId
        - roadName
      properties:
        roadId:
          $ref: '#/components/schemas/roadId'
        roadName:
          description: Название трассы
          type: string
        startLocation:
          $ref: '#/components/schemas/location'
        endLocation:
          $ref: '#/components/schemas/location'
    entrancesAndExits:
      description: Список промежуточных пунктов автодороги
      type: array
      items:
        $ref: '#/components/schemas/location'
    location:
      description: Пункт платной автодороги (съезд/выезд)
      type: object
      required:
        - locationId
        - locationName
      properties:
        locationId:
          $ref: '#/components/schemas/locationId'
        locationName:
          type: string
        city:
          description: Город, в котором находится локация
          $ref: '#/components/schemas/city'
        coordinates:
          type: string
          example: 134.854412 -25.828084
        km:
          description: Километр дороги, которой принадлежит участок
          type: integer
        openPVP:
          description: >-
            Флаг, показывающий, является ли въезд/съезд открытым; если true -
            ПВП отсутсвует, т.е. въезд/съезд открытый
          type: boolean
    city:
      type: object
      required:
        - locationId
        - locationName
      properties:
        cityId:
          type: integer
        cityName:
          type: string
    roadId:
      description: Идентификатор трассы
      type: integer
    locationId:
      description: Идентификатор точки на карте
      type: integer
    calcData:
      description: Данные для расчета стоимости проезда
      type: object
      required:
        - startLocation
        - endLocation
      properties:
        categoryId:
          type: integer
        departureTime:
          type: string
          format: date-time
          example: '2024-11-11T21:30:00'
        typeTransponderId:
          type: integer
        startLocation:
          $ref: '#/components/schemas/locationId'
        endLocation:
          $ref: '#/components/schemas/locationId'
    routeResponce:
      description: null
    ErrorStructure:
      description: Структура с описанием ошибки
      type: object
      properties:
        errorCode:
          type: string
          example: AAAA-01
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
